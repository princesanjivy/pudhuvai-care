[
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\n# lastUpdatedOn\nstatusRes = requests.get(\"https://pycare-api.herokuapp.com/status\")\nstatusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\ncovidTrackerRes = requests.get(",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "statusRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "statusRes = requests.get(\"https://pycare-api.herokuapp.com/status\")\nstatusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "statusData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "statusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"lastUpdatedOn\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# covidData ",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# covidData \nurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=csv\"\nresp = requests.get(url)\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidTrackerRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# covidData \nurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=csv\"\nresp = requests.get(url)\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidTrackerData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# covidData \nurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=csv\"\nresp = requests.get(url)\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"covidTracker\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"covidTracker\"] = covidTrackerData\n# covidData \nurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=csv\"\nresp = requests.get(url)\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=csv\"\nresp = requests.get(url)\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "resp",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "resp = requests.get(url)\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "data = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "data = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "latestData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "latestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "date",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "date = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "values = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "keys",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "keys = [\"todayNewCases\", \"hospitalised\", \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "subKeys",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "subKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}\ntestingCenterRes = requests.get(",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "values = [dict(zip(subKeys, values[i*4:(i+1)*4])) for i in range(1,len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"lastUpdatedData\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"lastUpdatedData\"] = date\ndynamic[\"covidData\"]  = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "m",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "m = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData\nwith open(\"testingCenter.json\", \"w\") as f:",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData\nwith open(\"testingCenter.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"testingCenter\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"testingCenter\"] = testingCenterData\nwith open(\"testingCenter.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# bedAvailability\ndynamic = {}\nbedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\nbedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "bedAvailabilityRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "bedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "bedAvailabilityData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "bedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"bedAvailability\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    }
]