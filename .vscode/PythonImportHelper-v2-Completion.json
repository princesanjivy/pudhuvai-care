[
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\n# lastUpdatedOn\nstatusRes = requests.get(\"https://pycare-api.herokuapp.com/status\")\nstatusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\n# covidTrackerRes = requests.get(",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "statusRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "statusRes = requests.get(\"https://pycare-api.herokuapp.com/status\")\nstatusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\n# covidTrackerRes = requests.get(\n#     \"https://pycare-api.herokuapp.com/districtWiseReport\")\n# covidTrackerData = json.loads(covidTrackerRes.content)",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "statusData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "statusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\n# covidTrackerRes = requests.get(\n#     \"https://pycare-api.herokuapp.com/districtWiseReport\")\n# covidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = [",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"lastUpdatedOn\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# covidTracker\ndynamic = {}\n# covidTrackerRes = requests.get(\n#     \"https://pycare-api.herokuapp.com/districtWiseReport\")\n# covidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = [\n    {",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\n# covidTrackerRes = requests.get(\n#     \"https://pycare-api.herokuapp.com/districtWiseReport\")\n# covidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = [\n    {\n        \"district\": \"Pondicherry\"\n    },\n    {\n        \"district\": \"Karaikal\"",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"covidTracker\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"covidTracker\"] = [\n    {\n        \"district\": \"Pondicherry\"\n    },\n    {\n        \"district\": \"Karaikal\"\n    },\n    {\n        \"district\": \"Yanam\"\n    },",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=\"\nresp = requests.get(url+\"csv\")\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "resp",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "resp = requests.get(url+\"csv\")\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "data = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "data = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "latestData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "latestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "date",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "date = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "values = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "keys",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "keys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "subKeys",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "subKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "values = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"lastUpdatedData\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "df = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "df = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "df = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"testStatistics\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"vitalStatistics\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ncovidData[\"detectedPositiveCase\"] = {\"pondicherry\": latestData[37],\n                                     \"karaikal\": latestData[38], \"yanam\": latestData[39], \"mahe\": latestData[40]}",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"occupancy\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ncovidData[\"detectedPositiveCase\"] = {\"pondicherry\": latestData[37],\n                                     \"karaikal\": latestData[38], \"yanam\": latestData[39], \"mahe\": latestData[40]}\ndynamic[\"covidData\"] = covidData\nwith open(\"covidTracker.json\", \"w\") as f:",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"covidVaccine\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ncovidData[\"detectedPositiveCase\"] = {\"pondicherry\": latestData[37],\n                                     \"karaikal\": latestData[38], \"yanam\": latestData[39], \"mahe\": latestData[40]}\ndynamic[\"covidData\"] = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"covidTillDate\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ncovidData[\"detectedPositiveCase\"] = {\"pondicherry\": latestData[37],\n                                     \"karaikal\": latestData[38], \"yanam\": latestData[39], \"mahe\": latestData[40]}\ndynamic[\"covidData\"] = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}\ntestingCenterRes = requests.get(",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidData[\"detectedPositiveCase\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidData[\"detectedPositiveCase\"] = {\"pondicherry\": latestData[37],\n                                     \"karaikal\": latestData[38], \"yanam\": latestData[39], \"mahe\": latestData[40]}\ndynamic[\"covidData\"] = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"covidData\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"covidData\"] = covidData\nwith open(\"covidTracker.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# testingCenter\ndynamic = {}\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "m",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "m = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData\nwith open(\"testingCenter.json\", \"w\") as f:",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData\nwith open(\"testingCenter.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"testingCenter\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"testingCenter\"] = testingCenterData\nwith open(\"testingCenter.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))\n# bedAvailability\ndynamic = {}\nbedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\nbedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "bedAvailabilityRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "bedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "bedAvailabilityData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "bedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"bedAvailability\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"bedAvailability.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "dynamic = {}\nurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=\"\nresp = requests.get(url+\"csv\")\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRJswyu1sF0hRdRIi8qFTXbUKqGQbV76bs6jNKUAX50ZdYmna0K-gf-TfZngyOVmHR6FcbQ7lwr_FIQ/pub?output=\"\nresp = requests.get(url+\"csv\")\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "resp",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "resp = requests.get(url+\"csv\")\ndata = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "data = csv.reader(io.StringIO(resp.text))\ndata = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "data",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "data = list(data)\nlatestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "latestData",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "latestData = data[4]\ndate = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "date",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "date = latestData[0]\nvalues = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "values = latestData[1:25]\nkeys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "keys",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "keys = [\"todayNewCases\", \"hospitalised\",\n        \"homeIsolation\", \"totalRecovered\", \"totalDeath\"]\nsubKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "subKeys",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "subKeys = [\"pondicherry\", \"karaikal\", \"yanam\", \"mahe\"]\nvalues = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "values",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "values = [dict(zip(subKeys, values[i*4:(i+1)*4]))\n          for i in range(1, len(values)//4)]\ncovidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "covidData",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "covidData = dict(zip(keys, values))\ncovidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "covidData[\"lastUpdatedData\"]",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "covidData[\"lastUpdatedData\"] = date\ndf = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "df = pd.read_excel(url+\"xlsx\", engine='openpyxl', sheet_name=1)\ndf = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "df = df.fillna(0)\ndf = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "df = df.iloc[3].tolist()\ncovidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "covidData[\"testStatistics\"]",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "covidData[\"testStatistics\"] = {\"todayTests\": latestData[1],\n                               \"cumTest\": latestData[33], \"cumNegative\": latestData[35]}\ncovidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "covidData[\"vitalStatistics\"]",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "covidData[\"vitalStatistics\"] = {\"testPositivity\": latestData[56][:4],\n                                \"caseFatalityRate\": latestData[57][:4], \"recoveryRate\": latestData[58][:4]}\ncovidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ndynamic[\"covidData\"]  = covidData\nprint(dynamic)",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "covidData[\"occupancy\"]",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "covidData[\"occupancy\"] = {\"jipmer\": latestData[2],\n                          \"ghcd\": latestData[3], \"ccc\": latestData[4]}\ncovidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ndynamic[\"covidData\"]  = covidData\nprint(dynamic)",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "covidData[\"covidVaccine\"]",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "covidData[\"covidVaccine\"] = {\"firstDose\": [df[12], df[15]], \"secondDose\": [\n    df[13], df[16]], \"total\": [df[14], df[17]]}\ncovidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ndynamic[\"covidData\"]  = covidData\nprint(dynamic)",
        "detail": "staticPages.test",
        "documentation": {}
    },
    {
        "label": "covidData[\"covidTillDate\"]",
        "kind": 5,
        "importPath": "staticPages.test",
        "description": "staticPages.test",
        "peekOfCode": "covidData[\"covidTillDate\"] = {\"detected\": latestData[36],\n                              \"recovered\": latestData[46], \"death\": latestData[51]}\ndynamic[\"covidData\"]  = covidData\nprint(dynamic)",
        "detail": "staticPages.test",
        "documentation": {}
    }
]