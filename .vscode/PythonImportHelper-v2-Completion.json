[
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "dynamic",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic = {}\n# lastUpdatedOn\nstatusRes = requests.get(\"https://pycare-api.herokuapp.com/status\")\nstatusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\n# covidTracker\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "statusRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "statusRes = requests.get(\"https://pycare-api.herokuapp.com/status\")\nstatusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\n# covidTracker\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# testingCenter\ntestingCenterRes = requests.get(",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "statusData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "statusData = json.loads(statusRes.content)\ndynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\n# covidTracker\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# testingCenter\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"lastUpdatedOn\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"lastUpdatedOn\"] = statusData[0][\"lastUpdatedOn\"]\n# covidTracker\ncovidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# testingCenter\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidTrackerRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidTrackerRes = requests.get(\n    \"https://pycare-api.herokuapp.com/districtWiseReport\")\ncovidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# testingCenter\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "covidTrackerData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "covidTrackerData = json.loads(covidTrackerRes.content)\ndynamic[\"covidTracker\"] = covidTrackerData\n# testingCenter\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"covidTracker\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"covidTracker\"] = covidTrackerData\n# testingCenter\ntestingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterRes = requests.get(\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vReED3ftV6BZO96JnXcC9puD5jYQqDzHKRWd8C_Eab0Z-edLU0z60JRWi3j7MJuTYDROnkgWlcujVSk/pub?output=csv\")\ntestingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterData = csv.reader(io.StringIO(testingCenterRes.text))\nm = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "m",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "m = list(testingCenterData)[8:]\ntestingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData\n# bedAvailability",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "testingCenterData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "testingCenterData = []\nfor data in m:\n    testingCenterData.append({\"district\": data[0].strip(),\n                              \"location\": data[2].strip(),\n                              \"time\": data[5].strip(),\n                              \"pincode\": data[6].strip(),\n                              \"map\": data[7].strip()})\ndynamic[\"testingCenter\"] = testingCenterData\n# bedAvailability\nbedAvailabilityRes = requests.get(",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"testingCenter\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"testingCenter\"] = testingCenterData\n# bedAvailability\nbedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "bedAvailabilityRes",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "bedAvailabilityRes = requests.get(\n    \"http://pycare-api.herokuapp.com/hospitalDetails\")\nbedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "bedAvailabilityData",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "bedAvailabilityData = json.loads(bedAvailabilityRes.content)\ndynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    },
    {
        "label": "dynamic[\"bedAvailability\"]",
        "kind": 5,
        "importPath": "staticPages.main",
        "description": "staticPages.main",
        "peekOfCode": "dynamic[\"bedAvailability\"] = bedAvailabilityData\nwith open(\"dynamic.json\", \"w\") as f:\n    f.write(json.dumps(dynamic))",
        "detail": "staticPages.main",
        "documentation": {}
    }
]